openapi: 3.0.3
info:
  title: User API
  version: 1.0.0
  description: API para registrar usuarios

paths:
  /user:
    post:
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password, phones]
              properties:
                name:
                  type: string
                  example: Juan Rodriguez
                email:
                  type: string
                  format: email
                  example: juan@rodriguez.org
                password:
                  type: string
                  format: password
                  example: Aw2345678$
                phones:
                  type: array
                  items:
                    type: object
                    required: [number, citycode, contrycode]
                    properties:
                      number:
                        type: string
                        example: "12345678"
                      citycode:
                        type: string
                        example: "1"
                      contrycode:
                        type: string
                        example: "57"
      responses:
        '200':
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  email:
                    type: string
                  password:
                    type: string
                  isActive:
                    type: boolean
                  token:
                    type: string
                  created:
                    type: string
                    format: date-time
                  modified:
                    type: string
                    format: date-time
                  lastLogin:
                    type: string
                    format: date-time
                  phones:
                    type: array
                    items:
                      type: object
                      properties:
                        created:
                          type: string
                          format: date-time
                        modified:
                          type: string
                          format: date-time
                        id:
                          type: integer
                        number:
                          type: string
                        citycode:
                          type: string
                        contrycode:
                          type: string
        '400':
          description: Error de validación en el campo password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                mensaje: "Hubo un problema con el campo password: La contrasena no cumple con los requisitos de seguridad"
        '409':
          description: Email ya registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                mensaje: "El correo ya ha sido registrado"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                mensaje: "Error inesperado. Por favor, inténtelo más tarde."

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        mensaje:
          type: string
